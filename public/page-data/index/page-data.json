{"componentChunkName":"component---node-modules-opensourcerepos-gatsby-theme-opensourcerepos-src-pages-index-js","path":"/","webpackCompilationHash":"","result":{"pageContext":{"0":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>Redux is a predictable state container for Javascript apps. You can store the state of your application using Redux. Redux provides some core functions for allowing you to access the state and write to state, and other helper functions which allow you to combine reducers, bind actions, etc. </p>\n<p>There are many folders that you will find when you open the Redux repository. The main source code of Redux lies in the \"src\" folder. We are going to focus on the \"src\" folder in this blog post.</p>\n<img src=\"/assets/understanding-the-source-code-of-redux-redux-js/folders.png\" width=\"100%\" height=\"300\">\n<h1 id=\"source-folder\"><a href=\"#source-folder\" aria-label=\"source folder permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Source folder</h1>\n<p>If you open the \"src\" folder, you will find the following files.</p>\n<img src=\"/assets/understanding-the-source-code-of-redux-redux-js/src.png\" width=\"100%\" height=\"300\">\n<h1 id=\"indexjs-file\"><a href=\"#indexjs-file\" aria-label=\"indexjs file permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.js file</h1>\n<p>The <strong>index.js</strong> file exports all the functions from other files. It also checks if you are using the development version of redux in production code without setting the environment variable NODE<em>ENV as \"production\". In simple terms, if you have not set NODE</em>ENV as production, but if your code is still minified, then it means that the Redux source code will be in development mode. So in index.js file, they have written a function called \"<strong>isCrushed</strong>\". </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isCrushed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n  process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token keyword\">typeof</span> isCrushed<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">&amp;&amp;</span>\n  isCrushed<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">'isCrushed'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'You are currently using minified code outside of NODE_ENV === \"production\". '</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'This means that you are running a slower development build of Redux. '</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify '</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) '</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'to ensure you have the correct code for your production build.'</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When you are using the minified code, the function name of \"isCrushed\" will be obfuscated to something smaller. But if you have not set NODE<em>ENV as production, Redux will not know that it has to include minified code. So you will be using development build of Redux. The above warning is to check for that edge case where you have forgotten to set the NODE</em>ENV as production when actually you are using the minified code in your build (Usually people use minified code in production builds)</p>\n<h1 id=\"createstorejs\"><a href=\"#createstorejs\" aria-label=\"createstorejs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>createStore.js</h1>\n<p>This is one of the main files of the Redux repository. It is a simple function, which exports 4 functions. The map of this file looks something like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span> preloadedState<span class=\"token punctuation\">,</span> enhancer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">listener</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">replaceReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextReducer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">observable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        dispatch<span class=\"token punctuation\">,</span>\n        subscribe<span class=\"token punctuation\">,</span>\n        getState<span class=\"token punctuation\">,</span>\n        replaceReducer<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span>$$observable<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> observable\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"getstate-function\"><a href=\"#getstate-function\" aria-label=\"getstate function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getState function</h1>\n<p>The <strong>getState</strong> function returns the currentState of the application. It checks if the current state is <strong>isDispatching</strong>, and if it is, then throws the error. <strong>isDispatching</strong> is a kind of lock that we have in the database. When the redux is updating the state (in dispatch function), it sets <strong>isDispatching</strong> to true, and only when the state is completely updated, it sets <strong>isDispatching</strong> back to false. This check-in getState is to prevent return inconsistent state when it is being updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDispatching<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'You may not call store.subscribe() while the reducer is executing. '</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">'If you would like to be notified after the store has been updated, subscribe from a '</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">'component and invoke store.getState() in the callback to access the latest state. '</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.'</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> currentState\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"subscribe-function\"><a href=\"#subscribe-function\" aria-label=\"subscribe function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>subscribe function</h1>\n<p>The subscribe function accepts a listener function as a parameter and adds it to an array of list of listeners called nextListeners. This array of functions is called whenever the state changes. It also returns the <strong>unsubscribe</strong> function, which can be used to remove the function from the array of functions (nextListeners). The pseudo-code of the subscribe function is as follows</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">listnerFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>listnerFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token comment\">// when you want to remove the listnerFunction</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"dispatch-function\"><a href=\"#dispatch-function\" aria-label=\"dispatch function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dispatch function</h1>\n<p>The dispatch function dispatches an action, which is used to change the state. The pseudo-code of dispatch function, after removing the checks that they have written is as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      isDispatching <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      currentState <span class=\"token operator\">=</span> <span class=\"token function\">currentReducer</span><span class=\"token punctuation\">(</span>currentState<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      isDispatching <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> listeners <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>currentListeners <span class=\"token operator\">=</span> nextListeners<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> listeners<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> listener <span class=\"token operator\">=</span> listeners<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n      <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> action\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here we set <strong>isDispatching</strong> to true (if you call getState when <strong>isDispatching</strong> is true, it throws an error instead of returning state). Then we pass the currentState and action to the currentReducer function, which returns a new state, which is again assigned to currentState. After that, the <strong>isDispatching</strong> is set to false again.</p>\n<p>Also, after the state is changed, all the listener functions from the nextListeners array are called. </p>\n<h1 id=\"replacereducer-function\"><a href=\"#replacereducer-function\" aria-label=\"replacereducer function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>replaceReducer function</h1>\n<p>In replaceReducer function, as the name suggests, it replaces the currentReducer with the new reducer function passed in the parameter of the function. It also dispatches an internal action called \"REPLACE\", so that the currentState is updated with new state and all listener functions are notified.</p>\n<p>The observable function allows you to observe for the changes in state. Whenever the state is changed, the function that is subscribed to observing it is called. Observables are different from promises. In promises, the function is resolved once. But in observables, the observed function is called whenever the function is resolved. </p>\n<p>The createStore also dispatched an internal state called INIT when it is called. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> ActionTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">INIT</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>We have looked into two important files \"index.js\" and \"createStore.js\". We will look into other source files in another blog post.</p>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/understanding-the-source-code-of-redux-redux-js.md","frontmatter":{"title":"Understanding the source code of Redux (ReduxJS)","date":"July 23, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/reduxjs/redux","repoOrganization":"reduxjs","repoName":"redux","author":"sant0shg"},"excerpt":"Introduction Redux is a predictable state container for Javascript apps. You can store the state of your application using Redux. Redux…","tableOfContents":"<ul>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#introduction\">Introduction</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#source-folder\">Source folder</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#indexjs-file\">index.js file</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#createstorejs\">createStore.js</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#getstate-function\">getState function</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#subscribe-function\">subscribe function</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#dispatch-function\">dispatch function</a></li>\n<li><a href=\"/understanding-the-source-code-of-redux-redux-js/#replacereducer-function\">replaceReducer function</a></li>\n</ul>","fields":{"slug":"/understanding-the-source-code-of-redux-redux-js/"},"timeToRead":4},"1":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p><a href=\"https://material.io/design/\">Material UI design</a> is a popular design guideline for webpages from Google. There are many libraries in the various framework that have implemented material design. React Material UI library ie <a href=\"https://material-ui.com/\">https://material-ui.com/</a> is a popular material UI library in React. </p>\n<p>The GitHub repository details are mentioned in the meta information of the blog. Nevertheless, here is the link to the Github repository of material UI.  <a href=\"https://github.com/mui-org/material-ui\">https://github.com/mui-org/material-ui</a></p>\n<p>Let us go through the code of Material UI.</p>\n<h1 id=\"introduction-to-codebase\"><a href=\"#introduction-to-codebase\" aria-label=\"introduction to codebase permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction to codebase</h1>\n<p>If you open the GitHub repository of material UI, you will find many folders and files like examples, docs, modules, packages and files like .circlei, .github, .eslintrc, etc. Explanation of each of these folders and files are in the table at the end of this blog post. As a beginner to the codebase of Material UI, you have to understand a few things first. </p>\n<p>Material UI codebase is built using the concept of monorepos. Monorepos means that a single repository hosts multiple npm packages. Advantage of doing so is that all packages are tracked from a single repository, there is no need to clone multiple packages and update the versions for each of them individually. </p>\n<p>Monorepos can be implemented in a few ways. Yarn supports something called workspaces. If you are using npm, then you can use a popular library called <a href=\"https://github.com/lerna/lerna\">Lerna</a>. </p>\n<p>Material UI using Lerna library to support the development of multiple packages of Material UI from the single Github codebase. </p>\n<p>The Lerna config is stored in the file called lerna.json. Below are the contents of the file</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"packages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"packages/*\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"npmClient\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"useWorkspaces\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"independent\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The above config means that the \"packages\" folder contains the multiple npm packages, the client used is yarn. Lerna supports both yarn and npm.</p>\n<h1 id=\"packages-folder\"><a href=\"#packages-folder\" aria-label=\"packages folder permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Packages Folder</h1>\n<p>If you open the packages folder, you will find many packages that Material UI uses. Each of these packages is an npm module. So you will find \"package.json\" file in this folder.  Here is the screenshot of the packages folder.</p>\n<img src=\"/assets/code-walkthrough-of-react-material-ui-repository/packages.png\" width=\"100%\" height=\"300\">\n<p>The core code of Material UI is present in the folder \"material-ui\". Let us explore this folder a bit more.</p>\n<h1 id=\"material-ui-folder\"><a href=\"#material-ui-folder\" aria-label=\"material ui folder permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>material-ui folder</h1>\n<p>Material UI exports the components such as \"Button\", \"Card\", \"List\", \"Modal\", \"Tabs\", \"Table\", etc. Each of these components is a React class in their own folders. So if you browse to <a href=\"https://github.com/mui-org/material-ui/tree/master/packages/material-ui/src\">src folder of the material-ui package</a>, you will find many folders like \"Button\", \"Card\", etc. Needless to say, these folders contain the respective code of that component which Material UI exports. </p>\n<p>Let us explore the sample code of \"Button\" code.  Go to the folder \"Button\" in \"src\" folder of \"material-ui\" package.  Here is the direct link to it. <a href=\"https://github.com/mui-org/material-ui/tree/master/packages/material-ui/src/Button\">https://github.com/mui-org/material-ui/tree/master/packages/material-ui/src/Button</a></p>\n<img src=\"/assets/code-walkthrough-of-react-material-ui-repository/material-ui-folder.png\" width=\"100%\" height=\"300\">\n<h1 id=\"explanation-of-files-of-button-component\"><a href=\"#explanation-of-files-of-button-component\" aria-label=\"explanation of files of button component permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanation of files of Button component</h1>\n<p>index.js\nThis file exports the Button component. Exporting a component from \"index.js\" folder allows you to directly import the component from the \"Button\" folder, instead of referencing the Button.js file in Button folder. </p>\n<p>index.d.ts\nThis file provides typescript type information about index.js.</p>\n<p>Button.js\nThis file exports the default Button component. The detailed explanation of this component will be explained in a different blog post. </p>\n<p>Button.d.ts\nThis file contains the typescript type information about the Button.js file. If you are coding in typescript, then you get useful information when using Button component like what is the type of props exported by component ( boolean, enums like small, medium or large, etc). </p>\n<p>Button.test.js\nThis file contains the unit test cases for the Button component.</p>\n<h1 id=\"explanations-of-all-important-files-and-folders-in-material-ui\"><a href=\"#explanations-of-all-important-files-and-folders-in-material-ui\" aria-label=\"explanations of all important files and folders in material ui permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanations of all important files and folders in material ui</h1>\n<p>Here is the description of some of the important folders and files</p>\n<table style=\"border-collapse: collapse; width: 100%; height: 1474px;\" border=\"1\">\n<tbody>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">.circleci</td>\n<td style=\"width: 81.3187%; height: 30px;\">Hidden file related to CircleCI tool (Continous Integration Tool)</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">.gtihub&nbsp;</td>\n<td style=\"width: 81.3187%; height: 30px;\">Hidden file related to Github</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">docs</td>\n<td style=\"width: 81.3187%; height: 30px;\">The folder containing the documentation and website&nbsp;<a href=\"https://material-ui.com/\">https://material-ui.com</a></td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">examples</td>\n<td style=\"width: 81.3187%; height: 30px;\">This folder contains examples of using the Material UI library.</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">modules</td>\n<td style=\"width: 81.3187%; height: 30px;\">Common modules like logging and async/await library WaterFall</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">packages</td>\n<td style=\"width: 81.3187%; height: 30px;\">This folder contains various npm packages</td>\n</tr>\n<tr style=\"height: 60px;\">\n<td style=\"width: 18.6813%; height: 60px;\">pages</td>\n<td style=\"width: 81.3187%; height: 60px;\">This folder contains the documentation of the website. The script copies the markdown files from this folder and puts it into the docs folder, from where documentation is rendered.</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">scripts</td>\n<td style=\"width: 81.3187%; height: 30px;\">Some scripts like prettier and git wrapper commands.</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">static</td>\n<td style=\"width: 81.3187%; height: 30px;\">This folder contains static assets like images.&nbsp;</td>\n</tr>\n<tr style=\"height: 30px;\">\n<td style=\"width: 18.6813%; height: 30px;\">test</td>\n<td style=\"width: 81.3187%; height: 30px;\">Contains regression test cases.</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.browserlistrc</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Contains a list of browsers that are supported.&nbsp;</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.codecov.yml</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Contains the code coverage threshold.&nbsp;</td>\n</tr>\n<tr style=\"height: 90px;\">\n<td style=\"width: 18.6813%; height: 90px;\">\n<p>.editorconfig</p>\n</td>\n<td style=\"width: 81.3187%; height: 90px;\">EditorConfig contains the config for editors. This config is respected by many editors and IDEs. This config file mentions configurations like trailing spaces, indentation, etc. Read more about editorconfig here <a href=\"https://editorconfig.org/\">https://editorconfig.org</a></td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.eslintignore</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Contains the configuration to ignore the files for eslint. Same like the gitignore file.</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.eslintrc.js</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Contains the configuration for eslint</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.gitattributes</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Contains the attributes for file types. For example, text=auto means that for txt types of files, the end of line should be automatically normalized.</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.gitignore</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Ignore files for git</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.size-limit.js</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for <a href=\"https://www.npmjs.com/package/size-limit\">size-limit npm package</a>.</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.tidelift.yml</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for <a href=\"https://tidelift.com/docs/config\">tidelift</a>&nbsp;</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.yarnrc</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for the yarn package manager</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>babel.config.js</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Contains the config for babel plugin</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>.crowdin.yml</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for <a href=\"https://crowdin.com/\">crowdin</a></td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>docker-compose.yml</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Docker file</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>lerna.json</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for Lerna&nbsp;</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>prettier.config.js<a id=\"ab9b36d6b3d8ecb76af4ab93254abde4-364abe0968c31aeb5c6149be816419c6befeb01f\" class=\"js-navigation-open\" style=\"box-sizing: border-box; background-color: #f6f8fa; color: #0366d6; outline-width: 0px; font-family: -apple-system, system-ui, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 14px; white-space: nowrap;\" title=\"prettier.config.js\" href=\"https://github.com/mui-org/material-ui/blob/master/prettier.config.js\"></a></p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for prettier&nbsp;</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>tsconfig.json</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Config file for typescript</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>tslint.json</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Lint for typescript</td>\n</tr>\n<tr style=\"height: 62px;\">\n<td style=\"width: 18.6813%; height: 62px;\">\n<p>yarn.lock</p>\n</td>\n<td style=\"width: 81.3187%; height: 62px;\">Lock file for yarn. Similar to package-lock.json</td>\n</tr>\n<tr>\n<td style=\"width: 18.6813%;\">\n<p>Other markdown files used by GitHub like CHANGELOG.md, CODE_OF_CONDUCT.md, CONTRIBUTING.md and other markdown files like BACKERS.md,&nbsp;</p>\n</td>\n<td style=\"width: 81.3187%;\">Markdown files contains the data in markdown format.</td>\n</tr>\n</tbody>\n</table>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/code-walkthrough-of-react-material-ui-repository.md","frontmatter":{"title":"Code walkthrough of React Material UI repository","date":"May 25, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/mui-org/material-ui","repoOrganization":"mui-org","repoName":"material-ui","author":"sant0shg"},"excerpt":"Introduction Material UI design is a popular design guideline for webpages from Google. There are many libraries in the various framework…","tableOfContents":"<ul>\n<li><a href=\"/code-walkthrough-of-react-material-ui-repository/#introduction\">Introduction</a></li>\n<li><a href=\"/code-walkthrough-of-react-material-ui-repository/#introduction-to-codebase\">Introduction to codebase</a></li>\n<li><a href=\"/code-walkthrough-of-react-material-ui-repository/#packages-folder\">Packages Folder</a></li>\n<li><a href=\"/code-walkthrough-of-react-material-ui-repository/#material-ui-folder\">material-ui folder</a></li>\n<li><a href=\"/code-walkthrough-of-react-material-ui-repository/#explanation-of-files-of-button-component\">Explanation of files of Button component</a></li>\n<li><a href=\"/code-walkthrough-of-react-material-ui-repository/#explanations-of-all-important-files-and-folders-in-material-ui\">Explanations of all important files and folders in material ui</a></li>\n</ul>","fields":{"slug":"/code-walkthrough-of-react-material-ui-repository/"},"timeToRead":5},"2":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>React Loadable is a higher order component on top of the <a href=\"https://github.com/tc39/proposal-dynamic-import\">import</a>. import allows you to dynamically import the modules, and it is at the stage 3 proposal at tc39. You can check the status <a href=\"https://github.com/tc39/proposals\">here</a>. You can use babel and enable the polyfill to use the import statement right away in your code.</p>\n<p>Actually, react-loadable is not required to import the React components dynamically. Here is an example of importing React components in the codebase without React Loadable.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    loaded<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n  elem <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">component</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        loaded<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>loaded<span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">:</span> <span class=\"token string\">'Loading...'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>As shown above, we are importing the Test component using import. import returns a promise, which can be assigned to a variable and rendered. </p>\n<p>One point to note is that because \"import\" is at stage 3 proposal, you will require babel polyfill to make it run in your codebase. If you are using create-react-app babel preset, then you will get the polyfill for import by default. Else, you need to install the following polyfill.</p>\n<p><a href=\"https://babeljs.io/docs/en/babel-plugin-syntax-dynamic-import\">@babel/plugin-syntax-dynamic-import</a></p>\n<h1 id=\"why-use-react-loadable\"><a href=\"#why-use-react-loadable\" aria-label=\"why use react loadable permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why use react loadable?</h1>\n<p>React loadable provides features like showing loading state, delaying the load of the component, timeout and error handling, server-side rendering, etc. Although it relies on the import statement of the babel to do the core heavy lifting, it makes it up by providing additional features as mentioned above. If you write your own higher-order component on top of \"import\", then it will end up similar to react loadable, give and take some features. </p>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/how-does-react-loadable-dynamically-import-components.md","frontmatter":{"title":"How does react loadable dynamically import components?","date":"May 31, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/jamiebuilds/react-loadable","repoOrganization":"jamiebuilds","repoName":"react-loadable","author":"sant0shg"},"excerpt":"Introduction React Loadable is a higher order component on top of the import. import allows you to dynamically import the modules, and it is…","tableOfContents":"<ul>\n<li><a href=\"/how-does-react-loadable-dynamically-import-components/#introduction\">Introduction</a></li>\n<li><a href=\"/how-does-react-loadable-dynamically-import-components/#why-use-react-loadable\">Why use react loadable?</a></li>\n</ul>","fields":{"slug":"/how-does-react-loadable-dynamically-import-components/"},"timeToRead":1},"3":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>The architecture of react-bootstrap is simple. </p>\n<p>The main code for bootstrap components like an accordion, tooltip, button, etc resides in the src folder. All the names of the files are self-explanatory. The file Alert.js default exports the \"alert\" component. Similarly, other files default export their respective components. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Alert<span class=\"token punctuation\">;</span></code></pre></div>\n<p>All of these files are again exported from the index.js file. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> Accordion <span class=\"token keyword\">from</span> <span class=\"token string\">'./Accordion'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> Alert <span class=\"token keyword\">from</span> <span class=\"token string\">'./Alert'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> Badge <span class=\"token keyword\">from</span> <span class=\"token string\">'./Badge'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> Breadcrumb <span class=\"token keyword\">from</span> <span class=\"token string\">'./Breadcrumb'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> BreadcrumbItem <span class=\"token keyword\">from</span> <span class=\"token string\">'./BreadcrumbItem'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'./Button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> ButtonGroup <span class=\"token keyword\">from</span> <span class=\"token string\">'./ButtonGroup'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> ButtonToolbar <span class=\"token keyword\">from</span> <span class=\"token string\">'./ButtonToolbar'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">'./Card'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> CardColumns <span class=\"token keyword\">from</span> <span class=\"token string\">'./CardColumns'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> CardDeck <span class=\"token keyword\">from</span> <span class=\"token string\">'./CardDeck'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> CardImg <span class=\"token keyword\">from</span> <span class=\"token string\">'./CardImg'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> CardGroup <span class=\"token keyword\">from</span> <span class=\"token string\">'./CardGroup'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> Carousel <span class=\"token keyword\">from</span> <span class=\"token string\">'./Carousel'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> CarouselItem <span class=\"token keyword\">from</span> <span class=\"token string\">'./CarouselItem'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> CloseButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./CloseButton'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>In order to get started with the development of the codebase of react bootstrap, follow the steps as mentioned in the readme file.</p>\n<p><a href=\"https://github.com/react-bootstrap/react-bootstrap#local-setup\">https://github.com/react-bootstrap/react-bootstrap#local-setup</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Yarn is our package manager of choice here. Check out setup instructions here if you don&#39;t have it installed already. After that you can run yarn run bootstrap to install all the needed dependencies.\n\nFrom there you can:\n\nRun the tests once with yarn test (Or run them in watch mode with yarn run tdd).\nStart a local copy of the docs site with yarn start\nOr build a local copy of the library with yarn run build</code></pre></div>\n<p>The \"yarn start\" command starts the gatsby server from \"www\" folder.</p>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/architecture-of-the-codebase-of-react-bootstrap-repository.md","frontmatter":{"title":"Architecture of the codebase of react-bootstrap repository","date":"June 02, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/react-bootstrap/react-bootstrap","repoOrganization":"react-bootstrap","repoName":"react-bootstrap","author":"sant0shg"},"excerpt":"Introduction The architecture of react-bootstrap is simple.  The main code for bootstrap components like an accordion, tooltip, button, etc…","tableOfContents":"<ul>\n<li><a href=\"/architecture-of-the-codebase-of-react-bootstrap-repository/#introduction\">Introduction</a></li>\n</ul>","fields":{"slug":"/architecture-of-the-codebase-of-react-bootstrap-repository/"},"timeToRead":1},"4":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>Deck.gl is developed from Uber. In this blog, we are not going to look into how the code works, or the code walkthrough, but go through a high level of architecture. We will look into the libraries that Deck.gl depends upon, and what are the modules exposed. We will look into codebase (code walkthrough) in another blog post.</p>\n<p>Deck.gl codebase is divided into multiple modules. These modules are present in the modules folder. Deck.gl uses Lerna to install the modules and the dependencies. </p>\n<p>Deck.gl uses a module called Luma.gl to render the graphs. Luma.gl uses WebGL2 to visualize the data. </p>\n<img src=\"/assets/high-level-architecture-of-deck-gl-visualization-library/deckgl.png\" width=\"100%\" height=\"300\">","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/high-level-architecture-of-deck-gl-visualization-library.md","frontmatter":{"title":"High level architecture of deck.gl visualization library ","date":"June 05, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/uber/deck.gl","repoOrganization":"uber","repoName":"deck.gl","author":"sant0shg"},"excerpt":"Introduction Deck.gl is developed from Uber. In this blog, we are not going to look into how the code works, or the code walkthrough, but go…","tableOfContents":"<ul>\n<li><a href=\"/high-level-architecture-of-deck-gl-visualization-library/#introduction\">Introduction</a></li>\n</ul>","fields":{"slug":"/high-level-architecture-of-deck-gl-visualization-library/"},"timeToRead":1},"5":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>Deck.gl repository is a collection of multiple npm packages. Each of the folder in the repository is an npm package</p>\n<p><a href=\"https://github.com/uber/deck.gl/tree/master/modules\">https://github.com/uber/deck.gl/tree/master/modules</a></p>\n<h1 id=\"how-does-deckgl-manage-multiple-packages\"><a href=\"#how-does-deckgl-manage-multiple-packages\" aria-label=\"how does deckgl manage multiple packages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How does Deck.GL manage multiple packages?</h1>\n<p>Deck.gl uses <a href=\"https://github.com/lerna/lerna\">Lerna</a> to maintain and update multiple packages. You can find the lerna config file <a href=\"https://github.com/uber/deck.gl/blob/master/lerna.json\">https://github.com/uber/deck.gl/blob/master/lerna.json</a></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"lerna\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"7.1.0-beta.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"npmClient\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"useWorkspaces\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"packages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"modules/*\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"publish\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bootstrap\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The \"modules\" folder is specified as \"packages\". It means that npm packages are present in the modules folder in deck.gl repository. If you open any folder in the \"modules\" folder, you will see a package.json file. Following are the modules published from Deck.GL repository</p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 50%;\"><strong>Folder</strong></td>\n<td style=\"width: 50%;\"><strong>NPM Package</strong></td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">aggregation-layers</td>\n<td style=\"width: 50%;\">@deck.gl/aggregation-layers</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">core</td>\n<td style=\"width: 50%;\">@deck.gl/core</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">geo-layers</td>\n<td style=\"width: 50%;\">@deck.gl/geo-layers</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">google-maps</td>\n<td style=\"width: 50%;\">@deck.gl/google-maps</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">json</td>\n<td style=\"width: 50%;\">@deck.gl/json</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">jupyter-widget</td>\n<td style=\"width: 50%;\">@deck.gl/jupyter-widget</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">layers</td>\n<td style=\"width: 50%;\">@deck.gl/layers</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">main</td>\n<td style=\"width: 50%;\">deck.gl</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">mapbox</td>\n<td style=\"width: 50%;\">@deck.gl/mapbox</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">mesh-layers</td>\n<td style=\"width: 50%;\">@deck.gl/mesh-layers</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">react</td>\n<td style=\"width: 50%;\">@deck.gl/react</td>\n</tr>\n<tr>\n<td style=\"width: 50%;\">test-utils</td>\n<td style=\"width: 50%;\">@deck.gl/test-utils</td>\n</tr>\n</tbody>\n</table>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/deck-gl-and-lerna-publishing-multiple-modules-monorepos.md","frontmatter":{"title":"Deck.GL and Lerna - publishing multiple modules (monorepos)","date":"June 05, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/uber/deck.gl","repoOrganization":"uber","repoName":"deck.gl","author":"sant0shg"},"excerpt":"Introduction Deck.gl repository is a collection of multiple npm packages. Each of the folder in the repository is an npm package https…","tableOfContents":"<ul>\n<li><a href=\"/deck-gl-and-lerna-publishing-multiple-modules-monorepos/#introduction\">Introduction</a></li>\n<li><a href=\"/deck-gl-and-lerna-publishing-multiple-modules-monorepos/#how-does-deckgl-manage-multiple-packages\">How does Deck.GL manage multiple packages?</a></li>\n</ul>","fields":{"slug":"/deck-gl-and-lerna-publishing-multiple-modules-monorepos/"},"timeToRead":1},"6":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>If you see the Ghost repository, you will find the client code resides in the \"core\" folder. This is how the repository looks.</p>\n<img src=\"/assets/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules/repo.png\" height=\"300\">\n<p>But that folder is not clickable. This client folder contains the code for the admin client of the ghost repository. But it is maintained separately in <a href=\"https://github.com/TryGhost/Ghost-Admin\">another repository</a>. </p>\n<h1 id=\"setting-up-the-local-environment\"><a href=\"#setting-up-the-local-environment\" aria-label=\"setting up the local environment permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up the local environment</h1>\n<p>In order to set up the local environment, you have to run the git clone command along with the flag </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--recurse-submodules</code></pre></div>\n<p>So the git clone command for Ghost would be </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone --recurse-submodules https://github.com/TryGhost/Ghost</code></pre></div>\n<h1 id=\"what-are-submodules-in-git\"><a href=\"#what-are-submodules-in-git\" aria-label=\"what are submodules in git permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What are submodules in git?</h1>\n<p>Submodules allow you to keep a Git repository as a subdirectory of another Git repository. This lets you clone another repository into your project and keep your commits separate.</p>\n<p><a href=\"https://git-scm.com/book/en/v2/Git-Tools-Submodules\">https://git-scm.com/book/en/v2/Git-Tools-Submodules</a></p>\n<p>Git submodules allow you to include other repositories inside the current one. Adding submodule is as simple as running the following command</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git submodule add https://github.com/&lt;repository_name&gt;</code></pre></div>\n<p>The submodule will be added to the folder called &#x3C;repository_name> by default. </p>\n<p>So Ghost team has added the \"<a href=\"https://github.com/TryGhost/Ghost-Admin\">Ghost-Admin</a>\" repository as a submodule to the <a href=\"https://github.com/TryGhost/Ghost\">main Ghost repository</a> </p>\n<h1 id=\"what-other-ways-are-there-to-track-multiple-modules\"><a href=\"#what-other-ways-are-there-to-track-multiple-modules\" aria-label=\"what other ways are there to track multiple modules permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What other ways are there to track multiple modules?</h1>\n<p>Many repositories follow \"mono-repos\" approach. This approach allows you to have multiple npm packages in a single Github repository. All of these packages will be tracked by single git history, but their versioning and release can be independent. This also reduces the number of repositories needed to maintain a package. There are many popular open source projects like React, React-Dnd, etc which follow this style. Usually, they use a package called Lerna. Yarn supports it by default as well. </p>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules.md","frontmatter":{"title":"How does Ghost maintain admin client and admin backend codebase using git submodules?","date":"June 09, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/TryGhost/Ghost","repoOrganization":"TryGhost","repoName":"Ghost","author":"sant0shg"},"excerpt":"Introduction If you see the Ghost repository, you will find the client code resides in the \"core\" folder. This is how the repository looks…","tableOfContents":"<ul>\n<li><a href=\"/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules/#introduction\">Introduction</a></li>\n<li><a href=\"/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules/#setting-up-the-local-environment\">Setting up the local environment</a></li>\n<li><a href=\"/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules/#what-are-submodules-in-git\">What are submodules in git?</a></li>\n<li><a href=\"/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules/#what-other-ways-are-there-to-track-multiple-modules\">What other ways are there to track multiple modules?</a></li>\n</ul>","fields":{"slug":"/how-does-ghost-maintain-admin-client-and-admin-backend-codebase-using-git-submodules/"},"timeToRead":2},"7":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>The Gatsby repository contains many npm packages in the <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages\">packages</a> folder. Below is the screenshot of the <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages\">packages</a> folder.</p>\n<img src=\"/assets/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/folders.png\" width=\"100%\" height=\"300\">\n<p>One of the npm packages is the core Gatsby package. If you want to debug the core Gatsby package, or any other package from that repository, follow the below steps.</p>\n<h1 id=\"debugging-the-packages\"><a href=\"#debugging-the-packages\" aria-label=\"debugging the packages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Debugging the packages</h1>\n<p>We are going to debug a core package called \"gatsby\". In order to debug this package, we need to create a gatsby project that uses the core package of gatsby from the above repository and not from the node_modules folder of the gatsby project. </p>\n<h2 id=\"step1---clone-the-gatsby-repository\"><a href=\"#step1---clone-the-gatsby-repository\" aria-label=\"step1   clone the gatsby repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step1 - Clone the gatsby repository</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/gatsbyjs/gatsby</code></pre></div>\n<p>The above command will clone the gatsby repository into the folder called gatsby.</p>\n<h2 id=\"step2---create-a-gatsby-project-using-gatsby-cli\"><a href=\"#step2---create-a-gatsby-project-using-gatsby-cli\" aria-label=\"step2   create a gatsby project using gatsby cli permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step2 - Create a gatsby project using gatsby cli</h2>\n<p>If you do not have gatsby-cli module, install the module using the following command</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli</code></pre></div>\n<p>Once the gatsby-cli is installed, create a new gatsby project using the following command</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new gatsby-demo</code></pre></div>\n<p>Go inside the gatsby-demo folder</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd gatsby-demo</code></pre></div>\n<p>Run the gatsby-demo project</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby develop</code></pre></div>\n<p>You will see the project running in port 8000 (default) (<a href=\"http://localhost:8000\">http://localhost:8000</a>)</p>\n<h2 id=\"step3---linking-the-gatsby-core-package\"><a href=\"#step3---linking-the-gatsby-core-package\" aria-label=\"step3   linking the gatsby core package permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step3 - Linking the gatsby core package</h2>\n<p>Now we have two folders - one folder called \"gatsby\" which contains the source code of the core package of gatsby, and another folder called \"gatsby-demo\" which contains a project created using gatsby cli.</p>\n<p>Right now, the gatsby demo project is using the core package of gatsby from the \"node<em>modules\" folder. In order to debug the source code of gatsby, we need to tell our gatsby demo project that \"Hey, instead of using the gatsby package from the node</em>modules folder, use the gatsby package from the project containing the source code of gatsby\". In order to that, we need to install another package called \"gatsby-dev-cli\". Run the following command to install gatsby-dev-cli.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-dev-cli</code></pre></div>\n<p>We need to build and watch for the changes in the source code package of gatsby, so that any change we do in that package is reflected in the gatsby-cli project. But there are many packages in the gatsby core repository, so we will selectively watch for the changes in our concerned package - the gatsby core package. Run the command to build and selectively watch for the changes.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn run watch --scope=gatsby</code></pre></div>\n<p>You will see the command line output something like this below.</p>\n<img src=\"/assets/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/cmd.png\" width=\"100%\" height=\"300\">\n<p>Now go the gatsby-demo folder, and run the following command to link the gatsby core package</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby-dev --set-path-to-repo &lt;Absolute path to gatsby project&gt;</code></pre></div>\n<p>Give the absolute path to the gatsby project in the last param. Example command is shown below</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby-dev --set-path-to-repo /Users/abc/Projects/gatsby/gatsby</code></pre></div>\n<p>After running the above command, open a new command terminal, and run the below command to install the latest dependencies again in the gatsby-demo project. Now, the gatsby will pick the dependency of core gatsby project from the source code repository. Run the following command in the gatsby-demo project</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby-dev</code></pre></div>\n<p>You will see that the gatsby is copying the files from source code repository folder to the node_modules folder in our demo project. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Copied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-image/index.js to node_modules/gatsby-image/index.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/gatsby-browser.js to node_modules/gatsby-plugin-offline/gatsby-browser.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/app-shell.js to node_modules/gatsby-plugin-offline/app-shell.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/gatsby-node.js to node_modules/gatsby-plugin-offline/gatsby-node.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/get-resources-from-html.js to node_modules/gatsby-plugin-offline/get-resources-from-html.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/sw-append.js to node_modules/gatsby-plugin-offline/sw-append.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/gatsby-ssr.js to node_modules/gatsby-plugin-offline/gatsby-ssr.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-offline/index.js to node_modules/gatsby-plugin-offline/index.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-react-helmet/gatsby-ssr.js to node_modules/gatsby-plugin-react-helmet/gatsby-ssr.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby-plugin-react-helmet/index.js to node_modules/gatsby-plugin-react-helmet/index.js\nCopied /Users/abc/Projects/gatsby/gatsby/packages/gatsby/babel.config.js to node_modules/gatsby/babel.config.js</code></pre></div>\n<h2 id=\"step4---start-the-gatsby-project\"><a href=\"#step4---start-the-gatsby-project\" aria-label=\"step4   start the gatsby project permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step4 - Start the gatsby project</h2>\n<p>Open a new command terminal in the gatsby-demo project, and run the following command </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn run develop</code></pre></div>\n<h2 id=\"step5---test---do-a-console-log-in-the-core-gatsby-project\"><a href=\"#step5---test---do-a-console-log-in-the-core-gatsby-project\" aria-label=\"step5   test   do a console log in the core gatsby project permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step5 - Test - Do a console log in the core gatsby project</h2>\n<p>Let us do a console log in the core source code of gatsby and check if that is picked up when running the gatsby-demo project</p>\n<p>Go to the \"packages/gatsby/src/commands/develop.js\" file in core gatsby project, and in the <a href=\"https://github.com/gatsbyjs/gatsby/blob/96aa8900b0762137ab820408d982420416ce8d45/packages/gatsby/src/commands/develop.js#L82\">startServer command section</a>, do a console log.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">program</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server is being started'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now when do restart the server at the gatsby demo project, you can see the log in command line terminal that \"server is being started\". </p>\n<img src=\"/assets/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/cmd2.png\" width=\"529px\" height=\"102px\">\n<p>So finally, you have linked the gatsby demo project with the source code of gatsby core repository. Whatever change you do in the source code of gatsby project will be reflected in the gatsby demo project.</p>","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby.md","frontmatter":{"title":"How to link the gatsby project with the source code of gatsby?","date":"June 20, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/gatsbyjs/gatsby","repoOrganization":"gatsbyjs","repoName":"gatsby","author":"sant0shg"},"excerpt":"Introduction The Gatsby repository contains many npm packages in the packages folder. Below is the screenshot of the packages folder. One of…","tableOfContents":"<ul>\n<li><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#introduction\">Introduction</a></li>\n<li>\n<p><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#debugging-the-packages\">Debugging the packages</a></p>\n<ul>\n<li><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#step1---clone-the-gatsby-repository\">Step1 - Clone the gatsby repository</a></li>\n<li><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#step2---create-a-gatsby-project-using-gatsby-cli\">Step2 - Create a gatsby project using gatsby cli</a></li>\n<li><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#step3---linking-the-gatsby-core-package\">Step3 - Linking the gatsby core package</a></li>\n<li><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#step4---start-the-gatsby-project\">Step4 - Start the gatsby project</a></li>\n<li><a href=\"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/#step5---test---do-a-console-log-in-the-core-gatsby-project\">Step5 - Test - Do a console log in the core gatsby project</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/"},"timeToRead":5},"8":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>In the <a href=\"https://opensourcerepos.com/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/\">previous blog</a>, we learned how to link the gatsby source code with the gatsby project. We created a gatsby demo project and linked the demo project with the source code of gatsby package. We were able to do a console log in the gatsby package, and see it reflected in the demo project. In this blog, we are going to explore further and learn how to put a debug point in the source code of gatsby package. </p>\n<h1 id=\"node-debug-flag\"><a href=\"#node-debug-flag\" aria-label=\"node debug flag permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node debug flag</h1>\n<p>In order to debug a node application, we have to pass the flag \"--inspect-brk\". This will start the debugger at port 9229. We can then use VSCode editor to listen to that port and start debugging. </p>\n<p>We have two gatsby application running. One of them is the source code of gatsby, running in the \"gatsby\" folder. Another application is the gatsby-demo application, running in the \"gatsby-demo\" folder. We have used the \"gatsby-dev-cli\" to link the gatsby with the gatsby-demo. Due to this, the gatsby-demo project is using the gatsby package from the gatsby folder, and not from the npm. </p>\n<p>In the gatsby folder, start watching for the file changes for gatsby package. Run the following command</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn run watch --scope=gatsby</code></pre></div>\n<p>This will start watching for the file changes that you do in the gatsby package.</p>\n<p>In the gatsby-demo folder, run the following command to start the gatsby server with the node debug flag.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node --inspect node_modules/.bin/gatsby develop</code></pre></div>\n<p>Here, we are starting the \"develop\" script from the package.json using the gatsby from the node_modules folder. This gatsby package is symlinked to the gatsby folder using gatsby-dev-cli. If you do not understand how then please go through the <a href=\"https://opensourcerepos.com/how-to-link-the-gatsby-project-with-the-source-code-of-gatsby/\">previous tutorial about linking the gatsby source code with the gatsby demo project</a>.</p>\n<p>After running the above command, you will see that the debugger has started listening at port 9229.</p>\n<h1 id=\"debug-configuration-in-vscode\"><a href=\"#debug-configuration-in-vscode\" aria-label=\"debug configuration in vscode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Debug configuration in VSCode</h1>\n<p>We are going to use the VSCode Editor to start the debugger and attach it to port 9229. In order to start debugging using the VSCode Editor, you will have to add the debug configuration. Follow the below steps</p>\n<ol>\n<li>Click on the debug icon at the left-hand sidebar of VSCode Editor.</li>\n</ol>\n<img src=\"/assets/how-to-debug-the-source-code-in-gatsby/img1.png\" width=\"100%\" height=\"300\">\n<ol start=\"2\">\n<li>You will see a list of debug configuration available. If the list is empty, you can always click on \"Add Configuration\" to add a new configuration.</li>\n</ol>\n<img src=\"/assets/how-to-debug-the-source-code-in-gatsby/img2.png\" width=\"100%\" height=\"300\">\n<ol start=\"3\">\n<li>If you do not have any configuration related to attaching the debugger to port 9229, click on \"Add Configuration\". This will open the file called \"launch.json\", where it will give you options on choosing list of configurations.</li>\n</ol>\n<img src=\"/assets/how-to-debug-the-source-code-in-gatsby/img3.png\" width=\"100%\" height=\"300\">\n<ol start=\"4\">\n<li>Click on the first configuration called \"Attach\". This will add a json configuration called \"Attach\" as follows.</li>\n</ol>\n<img src=\"/assets/how-to-debug-the-source-code-in-gatsby/img4.png\" width=\"100%\" height=\"300\">\n<h1 id=\"attaching-the-debugger\"><a href=\"#attaching-the-debugger\" aria-label=\"attaching the debugger permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Attaching the debugger</h1>\n<p>Now we have started the debugger which is listening to port 9229 from the gatsby folder, and also added the debug configuration in VSCode Editor. Let us attach this debugger to port 9229.</p>\n<p>We want to debug the source code of gatsby and not the gatsby-demo project. So you have to add the debug configuration in the editor where the gatsby source code is opened. Then click of the \"Attach\" configuration that we have recently added. This will add the attach the debugger to port 9229, and then you can put a breakpoint in the gatsby source code and debug it. </p>\n<p>Once you attach this configuration, you can see following debug options on top of VSCode. </p>\n<img src=\"/assets/how-to-debug-the-source-code-in-gatsby/img5.png\" width=\"100%\" height=\"300\">\n<p>We have put a debugger in the file called \"components.js\" in the gatsby source code, and you can see the debugger has stopped at the below line when we started the gatsby server in the gatsby demo project. </p>\n<img src=\"/assets/how-to-debug-the-source-code-in-gatsby/img6.png\" width=\"100%\" height=\"300\">","fileAbsolutePath":"/Users/santosh/Projects/opensourcerepos/blogs/src/repository-blogs/how-to-debug-the-source-code-in-gatsby.md","frontmatter":{"title":"How to debug the source code in gatsby?","date":"July 21, 2019","versionControl":"GitHub","repositoryUrl":"https://github.com/gatsbyjs/gatsby","repoOrganization":"gatsbyjs","repoName":"gatsby","author":"sant0shg"},"excerpt":"Introduction In the previous blog, we learned how to link the gatsby source code with the gatsby project. We created a gatsby demo project…","tableOfContents":"<ul>\n<li><a href=\"/how-to-debug-the-source-code-in-gatsby/#introduction\">Introduction</a></li>\n<li><a href=\"/how-to-debug-the-source-code-in-gatsby/#node-debug-flag\">Node debug flag</a></li>\n<li><a href=\"/how-to-debug-the-source-code-in-gatsby/#debug-configuration-in-vscode\">Debug configuration in VSCode</a></li>\n<li><a href=\"/how-to-debug-the-source-code-in-gatsby/#attaching-the-debugger\">Attaching the debugger</a></li>\n</ul>","fields":{"slug":"/how-to-debug-the-source-code-in-gatsby/"},"timeToRead":3},"isCreatedByStatefulCreatePages":false}}}